# This file was generated by Rigel.
############################################################################

# Use an intermediate stage to clone external repositories without
# compromising the security of any private SSH key.
FROM ros:{{ distro }} as intermediate

RUN apt clean && apt update && apt install -y \
    git \
{%- if 'melodic' == distro %}
    python-rosinstall \
    python-vcstool \
{%- else %}
    python3-rosinstall \
    python3-vcstool \
{%- endif %}
    ssh

RUN mkdir -p /root/.ssh/

{% if ssh_keys['keys'] is defined and ssh_keys['keys'] | length > 0 -%}
# Add SSH keys and set their permissions.
{% for key in ssh_keys['keys'] -%}
{%- if key.env -%}
ARG {{ key.env }}
{%- endif %}
{%- endfor %}
{%- for key in ssh_keys['keys'] %}
{% if key.path -%}
{% set filename = key.path.split('/') %}
COPY {{ key.path }} /root/.ssh/{{ filename|last }}
{%- else -%}
RUN echo "${{ key.env }}" > /root/.ssh/{{ key.env }} && chmod 600 /root/.ssh/{{ key.env }}
{%- endif %}
{%- endfor %}

# Copy SSH configuration file and set its permissions.
COPY dockerfile_config /root/.ssh/config
RUN chmod 600 /root/.ssh/config
{%- endif %}

# Ensure hosts are accepted.
RUN touch /root/.ssh/known_hosts
{%- if ssh_keys['keys'] is defined and ssh_keys['keys'] |length > 0 -%}
{%- for key in ssh_keys['keys'] %}
RUN ssh-keyscan {{ key.hostname }} >> /root/.ssh/known_hosts
{%- endfor %}
{%- endif %}

RUN mkdir -p /ros_workspace/src

{% if configuration.rosinstall is defined and configuration.rosinstall|length > 0 %}

# Copy .rosinstall files
{%- for file in configuration.rosinstall %}
COPY {{ file}} /ros_workspace/src/{{ file }}
{%- endfor %}
{%- endif %}

# Clone repositories.
RUN cd /ros_workspace \ 
    && /bin/bash -c "source /opt/ros/{{ distro }}/setup.bash \
{%- for file in configuration.rosinstall %}
    && vcs import src < src/{{ file }} \
{%- endfor %}
    " && echo

############################################################################

FROM {{ configuration.ros_image }}

{% if configuration.env is defined and configuration.env|length > 0 -%}
# Set required environment variables.
{% for env in configuration.env -%}
ENV {{ env.name }} {{ env.value }}
{% endfor %}
{% endif -%}

# Install dependencies.
RUN sudo apt clean && sudo apt update && sudo apt install -y \
    {% if configuration.apt is defined and configuration.apt|length > 0 -%}
    {% for package in configuration.apt -%}
        {{ package }} \
    {% endfor -%}
    {% endif -%}
    {% if configuration.compiler.name == 'colcon' -%}
        python3-colcon-common-extensions \
    {% endif -%}
    ssh

{% if configuration.docker_run is defined and configuration.docker_run|length > 0 -%}
# Execute additional commands.
{% for cmd in configuration.docker_run -%}
RUN {{ cmd }}
{% endfor -%}
{%- endif %}

# Create default user '{{ configuration.username }}'.
ARG USERNAME={{ configuration.username }}
RUN groupadd $USERNAME
RUN useradd -ms /bin/bash -g $USERNAME $USERNAME
RUN sh -c 'echo "$USERNAME ALL=(root) NOPASSWD:ALL" >> /etc/sudoers'
RUN sh -c 'sudo chown -R {{ configuration.username }}:{{ configuration.username }} /home/{{ configuration.username }}'
USER $USERNAME

# Create ROS workspace folder
RUN mkdir -p /home/{{ configuration.username }}/ros_workspace/src

{%- if configuration.rosinstall is defined and configuration.rosinstall|length > 0 %}

# Copy dependencies from intermediate stage.
COPY --from=intermediate /ros_workspace/src /home/{{ configuration.username }}/ros_workspace/src/

# Give workspace permissions to user
RUN sh -c 'sudo chmod -R +x /home/{{ configuration.username }}/ros_workspace'
RUN sh -c 'sudo chown -R {{ configuration.username }}:{{ configuration.username }} /home/{{ configuration.username }}/ros_workspace'
{%- endif %}

# Copy this repository into the ROS workspace.
COPY . /home/{{ configuration.username }}/ros_workspace/src/{{ workdir }}

# Copy bringup script.
COPY dockerfile_entrypoint.sh /home/{{ configuration.username }}/robot-entrypoint.sh

# Compile ROS workspace.
RUN /bin/bash -c "source /opt/ros/{{ distro }}/setup.bash \ 
    && cd /home/{{ configuration.username }}/ros_workspace \
    {% if 'core' in configuration.ros_image -%}
        && sudo rosdep init \
    {%- endif %}
    && sudo rosdep fix-permissions \
{%- if 'melodic' == distro %}
    && rosdep update --include-eol-distros \
{%- else %}
    && rosdep update \
{%- endif %}
    && rosdep install --rosdistro {{ distro }} --from-paths src --ignore-src -r -y \
    {% if configuration.compiler.name == 'catkin_make' -%}
        && catkin_make {{ cmake_args }}"
    {% elif configuration.compiler.name == 'colcon' -%}
        && colcon build {{ cmake_args }}"
    {%- endif %}

# Give permissions to user
RUN sh -c 'sudo chmod +x /home/{{ configuration.username }}/robot-entrypoint.sh'
RUN sh -c 'sudo chown {{ configuration.username }}:{{ configuration.username }} /home/{{ configuration.username }}/robot-entrypoint.sh'

# Launch ROS application.
{%- if configuration.command %}
CMD {{ configuration.command }}
{%- endif %}
ENTRYPOINT [ "/home/{{ configuration.username }}/robot-entrypoint.sh" ]
